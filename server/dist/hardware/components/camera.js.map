{"version":3,"sources":["../../../src/hardware/components/camera.js"],"names":[],"mappings":"AAAA;;;;;;AAEA,IAAI,eAAe,QAAQ,qBAAR,CAAnB;AAAA,IACE,aAAa,QAAQ,4BAAR,CADf;AAAA,IAEE,OAAO,QAAQ,eAAR,EAAyB,IAFlC;;IAIM,M;AACJ,kBAAY,KAAZ,EAAmB;AAAA;;AACjB,SAAK,GAAL,GAAW,MAAM,GAAjB;AACA,SAAK,IAAL,GAAY,MAAM,IAAlB;AACA,SAAK,KAAL,GAAa;AACX,aAAO,CAAC,MAAM,YADH;AAEX,WAAK,MAAM;AAFA,KAAb;AAIA,SAAK,MAAL,GAAc,KAAd;AACD;;;;qCAEgB;AAAA;;AACf,UAAI,KAAK,KAAL,CAAW,KAAf,EAAsB;;AAEpB,eAAO,QAAQ,MAAR,CAAe;AACpB,gBAAM;AADc,SAAf,CAAP;AAGD;;AAED,UAAI,KAAK,MAAL,CAAY,YAAhB,EAA8B;AAC5B,eAAO,WAAW,KAAK,MAAL,CAAY,YAAvB,EACJ,IADI,CACC;AAAA,iBAAM,MAAK,KAAL,CAAW,KAAX,GAAmB,IAAzB;AAAA,SADD,CAAP;AAED;;AAED,aAAO,QAAQ,OAAR,EAAP;AACD;;;oCAEe;AAAA;;AACd,UAAI,CAAC,KAAK,KAAL,CAAW,KAAhB,EAAuB;AACrB,eAAO,QAAQ,MAAR,CAAe;AACpB,gBAAM;AADc,SAAf,CAAP;AAGD;;AAED,UAAI,KAAK,MAAL,CAAY,WAAhB,EAA6B;AAC3B,eAAO,WAAW,KAAK,MAAL,CAAY,WAAvB,EACJ,IADI,CACC;AAAA,iBAAM,OAAK,KAAL,CAAW,KAAX,GAAmB,KAAzB;AAAA,SADD,CAAP;AAED;;AAED,aAAO,QAAQ,OAAR,EAAP;AACD;;;;;;AAGH,SAAS,UAAT,CAAqB,OAArB,EAA8B;AAC5B,SAAO,IAAI,OAAJ,CAAY,UAAC,OAAD,EAAU,MAAV,EAAqB;AACtC,QAAI,cAAc,KAAlB;AACA,QAAI,gBAAgB,KAApB;;AAEA,aAAS,kBAAT,GAA+B;AAC7B,sBAAgB,IAAhB;AACA;AACA,mBAAa,IAAb,CAAkB,yBAAlB;AACD;;;AAGD,QAAI,OAAJ,EAAa;AACX,iBAAW,KAAX,CAAiB,+BAA+B,OAAhD;AACA,WAAK,OAAL,EAAc,UAAU,KAAV,EAAiB,MAAjB,EAAyB,MAAzB,EAAiC;AAC7C,YAAI,UAAU,IAAd,EAAoB;AAClB,cAAI,UAAU,qCAAqC,OAArC,GAA+C,WAA/C,GAA6D,KAAK,SAAL,CAAe,KAAf,CAA7D,GAAqF,YAArF,GAAoG,KAAK,SAAL,CAAe,MAAf,CAApG,GAA6H,YAA7H,GAA4I,KAAK,SAAL,CAAe,MAAf,CAA1J;AACA,wBAAc,IAAd;AACA,iBAAO,OAAP;AACA,qBAAW,KAAX,CAAiB,OAAjB;AACD,SALD,MAKO;AACL;AACD;AACF,OATD;;AAWA,iBAAW,YAAY;;AAErB,YAAI,CAAC,WAAD,IAAgB,CAAC,aAArB,EAAoC;AAClC;AACD;AACF,OALD,EAKG,IALH;AAMD,KAnBD,MAmBO;AACL;AACD;AACF,GAjCM,CAAP;AAkCD;;AAED,OAAO,OAAP,GAAiB,MAAjB","file":"camera.js","sourcesContent":["'use strict';\n\nlet eventEmitter = require('../../event-emitter'),\n  logService = require('../../services/log-service'),\n  exec = require('child_process').exec;\n\nclass Camera {\n  constructor(setup) {\n    this.key = setup.key;\n    this.name = setup.name;\n    this.state = {\n      value: !setup.startCommand,\n      url: setup.url\n    };\n    this.config = setup;\n  }\n\n  startStreaming() {\n    if (this.state.value) {\n      // TODO - return something\n      return Promise.reject({\n        code: 'BADREQUEST'\n      });\n    }\n\n    if (this.config.startCommand) {\n      return runCommand(this.config.startCommand)\n        .then(() => this.state.value = true);\n    }\n\n    return Promise.resolve();\n  }\n\n  stopStreaming() {\n    if (!this.state.value) {\n      return Promise.reject({\n        code: 'BADREQUEST'\n      });\n    }\n\n    if (this.config.stopCommand) {\n      return runCommand(this.config.stopCommand)\n        .then(() => this.state.value = false);\n    }\n\n    return Promise.resolve();\n  }\n}\n\nfunction runCommand (command) {\n  return new Promise((resolve, reject) => {\n    let wasRejected = false;\n    let requestedData = false;\n\n    function setStateAndResolve () {\n      requestedData = true;\n      resolve();\n      eventEmitter.emit('component-state-changed');\n    }\n\n    // really? and security? maybe just run it as a daemon\n    if (command) {\n      logService.debug('Running streamer command: ' + command);\n      exec(command, function (error, stdout, stderr) {\n        if (error !== null) {\n          var message = 'Error running streamer command: ' + command + '. Error: ' + JSON.stringify(error) + '. Stdout: ' + JSON.stringify(stdout) + '. stderr: ' + JSON.stringify(stderr);\n          wasRejected = true;\n          reject(message);\n          logService.error(message);\n        } else {\n          setStateAndResolve();\n        }\n      });\n\n      setTimeout(function () {\n        // WORKAROUND - because exec callback is not being executed until the process is finished\n        if (!wasRejected && !requestedData) {\n          setStateAndResolve();\n        }\n      }, 2000);\n    } else {\n      setStateAndResolve();\n    }\n  });\n}\n\nmodule.exports = Camera;"]}