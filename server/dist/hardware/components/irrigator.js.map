{"version":3,"sources":["../../../src/hardware/components/irrigator.js"],"names":[],"mappings":"AAAA;;;;;;AAEA,IAAI,OAAO,QAAQ,aAAR,CAAX;AAAA,IACE,eAAe,QAAQ,qBAAR,CADjB;AAAA,IAEE,aAAa,QAAQ,8BAAR,CAFf;;IAIM,S;AACJ,qBAAa,KAAb,EAAoB;AAAA;;AAClB,SAAK,WAAL,GAAmB,eAAe,KAAf,CAAnB;AACA,SAAK,GAAL,GAAW,MAAM,GAAjB;AACA,SAAK,IAAL,GAAY,MAAM,IAAlB;AACA,SAAK,KAAL,GAAa;AACX,aAAO;AADI,KAAb;AAGD;;;;yBAEK;AACJ,UAAI,KAAK,KAAL,CAAW,KAAf,EAAsB;AACpB,YAAI,eAAe,kCAAkC,KAAK,GAA1D;AACA,mBAAW,IAAX,CAAgB,YAAhB;AACA,eAAO,QAAQ,MAAR,CAAe;AACpB,gBAAM,YADc;AAEpB,mBAAS;AAFW,SAAf,CAAP;AAID;;AAED,WAAK,WAAL,CAAiB,KAAjB,CAAuB,EAAvB;AACA,WAAK,KAAL,CAAW,KAAX,GAAmB,IAAnB;AACA,iBAAW,KAAX,CAAiB,0BAA0B,KAAK,GAAhD;AACA,mBAAa,IAAb,CAAkB,yBAAlB;AACA,aAAO,QAAQ,OAAR,EAAP;AACD;;;0BAEM;AACL,UAAI,CAAC,KAAK,KAAL,CAAW,KAAhB,EAAuB;AACrB,YAAI,eAAe,mCAAmC,KAAK,GAA3D;AACA,mBAAW,IAAX,CAAgB,YAAhB;AACA,eAAO,QAAQ,MAAR,CAAe;AACpB,gBAAM,YADc;AAEpB,mBAAS;AAFW,SAAf,CAAP;AAID;;AAED,WAAK,WAAL,CAAiB,KAAjB,CAAuB,GAAvB;AACA,WAAK,KAAL,CAAW,KAAX,GAAmB,KAAnB;AACA,mBAAa,IAAb,CAAkB,yBAAlB;AACA,iBAAW,KAAX,CAAiB,2BAA2B,KAAK,GAAjD;AACA,aAAO,QAAQ,OAAR,EAAP;AACD;;;;;;AAGH,SAAS,cAAT,CAAyB,KAAzB,EAAgC;AAC9B,MAAI,YAAY;AACd,SAAK,MAAM,GADG;AAEd,UAAM;AAFQ,GAAhB;;AAKA,MAAI,MAAM,KAAV,EAAiB;AACf,cAAU,KAAV,GAAkB,MAAM,KAAxB;AACD;;AAED,SAAO;AACL,WAAO,IAAI,KAAK,KAAT,CAAe,SAAf;AADF,GAAP;AAGD;;AAED,OAAO,OAAP,GAAiB,SAAjB","file":"irrigator.js","sourcesContent":["'use strict';\n\nlet five = require('johnny-five'),\n  eventEmitter = require('../../event-emitter'),\n  logService = require('./../../services/log-service');\n\nclass Irrigator {\n  constructor (setup) {\n    this.fiveObjects = getFiveObjects(setup);\n    this.key = setup.key;\n    this.name = setup.name;\n    this.state = {\n      value: false\n    };\n  }\n\n  on () {\n    if (this.state.value) {\n      let errorMessage = 'Irrigator already turned on: ' + this.key;\n      logService.warn(errorMessage);\n      return Promise.reject({\n        code: 'BADREQUEST',\n        message: errorMessage\n      });\n    }\n\n    this.fiveObjects.relay.on();\n    this.state.value = true;\n    logService.debug('Irrigator turned on: ' + this.key);\n    eventEmitter.emit('component-state-changed');\n    return Promise.resolve();\n  }\n\n  off () {\n    if (!this.state.value) {\n      let errorMessage = 'Irrigator already turned off: ' + this.key;\n      logService.warn(errorMessage);\n      return Promise.reject({\n        code: 'BADREQUEST',\n        message: errorMessage\n      });\n    }\n\n    this.fiveObjects.relay.off();\n    this.state.value = false;\n    eventEmitter.emit('component-state-changed');\n    logService.debug('Irrigator turned off: ' + this.key);\n    return Promise.resolve();\n  }\n}\n\nfunction getFiveObjects (setup) {\n  let fiveSetup = {\n    pin: setup.pin,\n    type: 'NC'\n  };\n\n  if (setup.board) {\n    fiveSetup.board = setup.board;\n  }\n\n  return {\n    relay: new five.Relay(fiveSetup)\n  };\n}\n\nmodule.exports = Irrigator;"]}