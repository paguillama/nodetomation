{"version":3,"sources":["../../../src/hardware/components/thermometer.js"],"names":[],"mappings":"AAAA;;;;AAEA,IAAI,OAAO,QAAQ,aAAR,CAAX;AAAA,IACE,eAAe,QAAQ,qBAAR,CADjB;;IAGM,W,GACJ,qBAAa,KAAb,EAAoB;AAAA;;AAClB,MAAI,cAAc,eAAe,KAAf,CAAlB;AACA,MAAI,OAAO,MAAM,IAAjB;;AAEA,OAAK,GAAL,GAAW,MAAM,GAAjB;AACA,OAAK,IAAL,GAAY,MAAM,IAAlB;AACA,OAAK,IAAL,GAAY,MAAM,IAAlB;;AAEA,MAAI,QAAQ;AACV,WAAO;AADG,GAAZ;AAGA,OAAK,KAAL,GAAa,KAAb;;;AAGA,MAAI,sBAAsB,EAA1B;AACA,OAAK,QAAL,GAAgB,UAAU,QAAV,EAAoB;AAClC,wBAAoB,IAApB,CAAyB,QAAzB;AACD,GAFD;;AAIA,cAAY,MAAZ,CAAmB,EAAnB,CAAsB,QAAtB,EAAgC,YAAY;AAC1C,iBAAa,IAAb,CAAkB,yBAAlB;;AAEA,QAAI,oBAAoB,KAAK,IAAL,MAAe,MAAM,KAA7C;;;AAGA,UAAM,KAAN,GAAc,KAAK,IAAL,CAAd;;AAEA,QAAI,iBAAJ,EAAuB;AAAA;AAAA;AAAA;;AAAA;AACrB,6BAAsB,mBAAtB,8HAA2C;AAAA,cAAnC,UAAmC;;AACzC,qBAAW,KAAX;AACD;AAHoB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAItB;AACF,GAbD;AAcD,C;;AAGH,SAAS,cAAT,CAAyB,KAAzB,EAAgC;AAC9B,MAAI,YAAY,EAAhB;;AAEA,MAAI,MAAM,GAAV,EAAe;AACb,cAAU,GAAV,GAAgB,MAAM,GAAtB;AACD;;AAED,MAAI,MAAM,KAAV,EAAiB;AACf,cAAU,KAAV,GAAkB,MAAM,KAAxB;AACD;;AAED,MAAI,MAAM,IAAV,EAAgB;AACd,cAAU,IAAV,GAAiB,MAAM,IAAvB;AACD;;AAED,MAAI,MAAM,UAAV,EAAsB;AACpB,cAAU,UAAV,GAAuB,MAAM,UAA7B;AACD,GAFD,MAEO,IAAI,MAAM,SAAV,EAAqB;AAC1B,cAAU,SAAV,GAAsB,MAAM,SAA5B;AACD;;AAED,SAAO;AACL,YAAQ,IAAI,KAAK,WAAT,CAAqB,SAArB;AADH,GAAP;AAGD;;AAED,OAAO,OAAP,GAAiB,WAAjB","file":"thermometer.js","sourcesContent":["'use strict';\n\nlet five = require('johnny-five'),\n  eventEmitter = require('../../event-emitter');\n\nclass Thermometer {\n  constructor (setup) {\n    let fiveObjects = getFiveObjects(setup);\n    let unit = setup.unit;\n\n    this.key = setup.key;\n    this.name = setup.name;\n    this.unit = setup.unit;\n\n    let state = {\n      value: null\n    };\n    this.state = state;\n\n    // TODO - unsuscribe\n    let onChangeSubscribers = [];\n    this.onChange = function (callback) {\n      onChangeSubscribers.push(callback);\n    };\n\n    fiveObjects.sensor.on('change', function () {\n      eventEmitter.emit('component-state-changed');\n\n      var updateSubscribers = this[unit] !== state.value;\n\n      // Updates state\n      state.value = this[unit];\n\n      if (updateSubscribers) {\n        for(let subscriber of onChangeSubscribers) {\n          subscriber(state);\n        }\n      }\n    });\n  }\n}\n\nfunction getFiveObjects (setup) {\n  let fiveSetup = {};\n\n  if (setup.pin) {\n    fiveSetup.pin = setup.pin;\n  }\n\n  if (setup.board) {\n    fiveSetup.board = setup.board;\n  }\n\n  if (setup.freq) {\n    fiveSetup.freq = setup.freq;\n  }\n\n  if (setup.controller) {\n    fiveSetup.controller = setup.controller;\n  } else if (setup.toCelsius) {\n    fiveSetup.toCelsius = setup.toCelsius;\n  }\n\n  return {\n    sensor: new five.Temperature(fiveSetup)\n  };\n}\n\nmodule.exports = Thermometer;"]}