{"version":3,"sources":["../../src/routes/schedules.js"],"names":[],"mappings":"AAAA;;AAEA,IAAI,SAAS,QAAQ,SAAR,EAAmB,MAAnB,EAAb;AAAA,IACE,kBAAkB,QAAQ,8BAAR,CADpB;AAAA,IAEE,aAAa,QAAQ,yBAAR,CAFf;;;AAKA,SAAS,cAAT,CAAyB,SAAzB,EAAoC;AAClC,MAAI,iBAAiB;AACnB,gBAAY,GADO;AAEnB,kBAAc;AAFK,GAArB;;AAKA,aAAW,KAAX,CAAiB,cAAc,SAA/B;;AAEA,SAAO,eAAe,SAAf,KAA6B,GAApC;AACD;;AAED,OAAO,GAAP,CAAW,GAAX,EAAgB,UAAC,GAAD,EAAM,GAAN,EAAc;AAC5B,kBACG,MADH,GAEG,IAFH,CAEQ;AAAA,WAAQ,IAAI,IAAJ,CAAS,IAAT,CAAR;AAAA,GAFR,EAGQ;AAAA,WAAS,IAAI,UAAJ,CAAe,eAAe,MAAM,IAArB,CAAf,CAAT;AAAA,GAHR;AAID,CALD;;AAOA,OAAO,IAAP,CAAY,OAAZ,EAAqB,UAAC,GAAD,EAAM,GAAN,EAAc;AACjC,MAAI,IAAJ,CAAS,GAAT,GAAe,IAAI,MAAJ,CAAW,GAA1B;AACA,kBACG,MADH,CACU,IAAI,IADd,EAEG,IAFH,CAEQ;AAAA,WAAQ,IAAI,IAAJ,CAAS,IAAT,CAAR;AAAA,GAFR,EAGQ;AAAA,WAAS,IAAI,UAAJ,CAAe,eAAe,MAAM,IAArB,CAAf,CAAT;AAAA,GAHR;AAID,CAND;;AAQA,OAAO,MAAP,CAAc,OAAd,EAAuB,UAAC,GAAD,EAAM,GAAN,EAAc;AACnC,kBACG,MADH,CACU,IAAI,MAAJ,CAAW,GADrB,EAEG,IAFH,CAEQ;AAAA,WAAQ,IAAI,IAAJ,CAAS,IAAT,CAAR;AAAA,GAFR,EAGQ;AAAA,WAAS,IAAI,UAAJ,CAAe,eAAe,MAAM,IAArB,CAAf,CAAT;AAAA,GAHR;AAID,CALD;;AAOA,OAAO,GAAP,CAAW,OAAX,EAAoB,UAAC,GAAD,EAAM,GAAN,EAAc;AAChC,MAAI,IAAJ,CAAS,GAAT,GAAe,IAAI,MAAJ,CAAW,GAA1B;AACA,kBACG,GADH,CACO,IAAI,IADX,EAEG,IAFH,CAEQ;AAAA,WAAQ,IAAI,IAAJ,CAAS,IAAT,CAAR;AAAA,GAFR,EAGI;AAAA,WAAS,IAAI,UAAJ,CAAe,eAAe,MAAM,IAArB,CAAf,CAAT;AAAA,GAHJ;AAID,CAND;;AAQA,OAAO,OAAP,GAAiB,MAAjB","file":"schedules.js","sourcesContent":["'use strict';\n\nlet router = require('express').Router(),\n  scheduleService = require('../services/schedule-service'),\n  logService = require('../services/log-service');\n\n// TODO - improve\nfunction getErrorStatus (errorCode) {\n  let errorStatusMap = {\n    'NOTFOUND': 404,\n    'BADREQUEST': 400\n  };\n\n  logService.debug('errorCode' + errorCode);\n\n  return errorStatusMap[errorCode] || 500;\n}\n\nrouter.get('/', (req, res) => {\n  scheduleService\n    .getAll()\n    .then(data => res.send(data),\n          error => res.sendStatus(getErrorStatus(error.code)));\n});\n\nrouter.post('/:key', (req, res) => {\n  req.body.key = req.params.key;\n  scheduleService\n    .update(req.body)\n    .then(data => res.send(data),\n          error => res.sendStatus(getErrorStatus(error.code)));\n});\n\nrouter.delete('/:key', (req, res) => {\n  scheduleService\n    .remove(req.params.key)\n    .then(data => res.send(data),\n          error => res.sendStatus(getErrorStatus(error.code)));\n});\n\nrouter.put('/:key', (req, res) => {\n  req.body.key = req.params.key;\n  scheduleService\n    .add(req.body)\n    .then(data => res.send(data),\n      error => res.sendStatus(getErrorStatus(error.code)));\n});\n\nmodule.exports = router;"]}