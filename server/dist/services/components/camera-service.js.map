{"version":3,"sources":["../../../src/services/components/camera-service.js"],"names":[],"mappings":"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","file":"camera-service.js","sourcesContent":["'use strict';\n\nlet Camera = require('../../hardware/components/camera'),\n  logService = require('./../log-service');\n\nlet components = {};\n\nfunction load (setup) {\n  if(Object.prototype.toString.call(setup) === '[object Array]' ) {\n    let promises = [];\n    for (let setupItem of setup) {\n      promises.push(loadItem(setupItem));\n    }\n    return Promise.all(promises);\n  } else {\n    return loadItem(setup);\n  }\n}\n\nfunction loadItem (setup) {\n  if (components[setup.key]) {\n    let errorMessage = 'Camera key already exists: ' + setup.key;\n    logService.error(errorMessage);\n    return Promise.reject({\n      code: 'BADREQUEST',\n      message: errorMessage\n    });\n  }\n\n  components[setup.key] = {\n    key: setup.key,\n    name: setup.name,\n    hardwareComponent: new Camera(setup),\n    coordinates: setup.coordinates\n  };\n\n  return get(setup.key)\n    .then(component => {\n      logService.debug('Camera loaded: ' + setup.key);\n      return component;\n    })\n    .catch(err => {\n      logService.debug('Error getting camera after loading: ' + setup.key + '. Error: ' + JSON.stringify(err));\n      return err;\n    });\n}\n\nfunction startStreaming (key) {\n  let component = components[key].hardwareComponent;\n  if (!component) {\n    let errorMessage = 'Camera not found: ' + key;\n    logService.error(errorMessage);\n    return Promise.reject({\n      code: 'NOTFOUND',\n      message: errorMessage\n    });\n  }\n\n  return component.startStreaming();\n}\n\nfunction get (key) {\n  let component = components[key];\n  if (!component) {\n    let errorMessage = 'Camera not found: ' + key;\n    logService.error(errorMessage);\n    return Promise.reject({\n      code: 'NOTFOUND',\n      message: errorMessage\n    });\n  }\n\n  let defaultAction = component.hardwareComponent.state.value ? 'stop-streaming' : 'start-streaming';\n  return Promise.resolve({\n    name: component.hardwareComponent.name,\n    key: component.key,\n    typeKey: 'camera',\n    state: component.hardwareComponent.state,\n    coordinates: component.coordinates,\n    defaultAction: defaultAction,\n    actions: [\n      defaultAction\n    ]\n  });\n}\n\nfunction stopStreaming (key) {\n  let component = components[key].hardwareComponent;\n  if (!component) {\n    let errorMessage = 'Camera not found: ' + key;\n    logService.error(errorMessage);\n    return Promise.reject({\n      code: 'NOTFOUND',\n      message: errorMessage\n    });\n  }\n\n  return component.stopStreaming();\n}\n\nfunction getAll () {\n  return Object.keys(components).map(key => {\n    return {\n      key: key\n    };\n  });\n}\n\nmodule.exports = {\n  get: get,\n  getAll: getAll,\n  load: load,\n  actions: {\n    'start-streaming': startStreaming,\n    'stop-streaming': stopStreaming\n  },\n  events: {}\n};"]}