{"version":3,"sources":["../../src/services/schedule-service.js"],"names":[],"mappings":"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","file":"schedule-service.js","sourcesContent":["'use strict';\n\nlet CronJob = require('cron').CronJob,\n  scheduleRepository = require('../data-access/schedule-repository'),\n  logService = require('./log-service'),\n  actionService = require('./action-service');\n\nlet scheduled = {};\n\nfunction load () {\n  return new Promise((resolve, reject) => {\n    scheduleRepository.getAll()\n      .then(schedules => {\n        let promises = [];\n        for (let schedule of schedules) {\n          promises.push(loadSchedule(schedule));\n        }\n        Promise.all(promises)\n          .then(resolve)\n          .catch(reject);\n      })\n      .catch(reject);\n  });\n}\n\nfunction loadSchedule (config) {\n  if (scheduled[config.key]) {\n    let errorMessage = 'Schedule task key already exists: ' + config.key;\n    logService.error(errorMessage);\n    return Promise.reject({\n      code: 'BADREQUEST',\n      message: errorMessage\n    });\n  }\n\n  scheduled[config.key] = {\n    name: config.name,\n    key: config.key,\n    start: config.start,\n    tasks: []\n  };\n\n  for(let task of config.tasks) {\n    let onTick = task.actionKey ? () => actionService.execute(task.actionKey) : task.onTick;\n\n    scheduled[config.key].tasks.push({\n      key: task.key,\n      cronTime: task.cronTime,\n      actionKey: task.actionKey,\n      cronJob: new CronJob({\n        cronTime: task.cronTime,\n        onTick: onTick,\n        start: config.start !== false && task.start !== false\n      })\n    });\n  }\n\n  return get(config.key);\n}\n\nfunction remove (key) {\n  if (!scheduled[key]) {\n    let errorMessage = 'Schedule task key do not exists: ' + key;\n    logService.error(errorMessage);\n    return Promise.reject({\n      code: 'NOTFOUND',\n      message: errorMessage\n    });\n  }\n\n  for(let task of scheduled[key].tasks) {\n    task.cronJob.stop();\n  }\n\n  delete scheduled[key];\n  return Promise.resolve();\n}\n\nfunction update (config) {\n  return new Promise((resolve, reject) => {\n    remove(config.key).then(() => {\n      loadSchedule(config).then(resolve, reject);\n    }, reject);\n  });\n}\n\nfunction getAll () {\n  let keys = Object.keys(scheduled);\n\n  let getPromises = keys.map((key) => {\n    return get(key);\n  });\n\n  return Promise.all(getPromises);\n}\n\nfunction get (key) {\n  if (!scheduled[key]) {\n    let errorMessage = 'Schedule key not found: ' + key;\n    logService.error(errorMessage);\n    return Promise.reject({\n      code: 'NOTFOUND',\n      message: errorMessage\n    });\n  }\n\n  let schedule = scheduled[key];\n\n  let scheduleToReturn = {\n    name: schedule.name,\n    key: schedule.key,\n    tasks: schedule.tasks.map(task => {\n      return {\n        key: task.key,\n        cronTime: task.cronTime,\n        actionKey: task.actionKey\n      };\n    })\n  };\n\n  return Promise.resolve(scheduleToReturn);\n}\n\nmodule.exports = {\n  getAll: getAll,\n  get: get,\n  load: load,\n  update: update,\n  remove: remove\n};"]}